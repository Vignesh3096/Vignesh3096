import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';

dotenv.config({ path: path.resolve(__dirname, './config/.env') });

async function globalSetup() {
  const allureResults = process.env.ALLURE_RESULTS || 'C:/PlaywrightReports/allure-results';

  if (fs.existsSync(allureResults)) {
    fs.rmSync(allureResults, { recursive: true, force: true });
    console.log(`üßπ Cleaned old allure-results folder: ${allureResults}`);
  }

  fs.mkdirSync(allureResults, { recursive: true });
  console.log(`üìÅ Created fresh allure-results folder: ${allureResults}`);
}

export default globalSetup;


import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';
import dotenv from 'dotenv';
import AdmZip from 'adm-zip';

dotenv.config({ path: path.resolve(__dirname, './config/.env') });

async function globalTeardown() {
  const allureResults = process.env.ALLURE_RESULTS!;
  const allureReport = process.env.ALLURE_REPORT!;
  const allureBackup = process.env.ALLURE_BACKUP!;
  const generateReport = process.env.ALLURE_GENERATE === 'true';
  const openReport = process.env.ALLURE_OPEN === 'true';

  const ensureFolder = (folderPath: string) => {
    if (!fs.existsSync(folderPath)) fs.mkdirSync(folderPath, { recursive: true });
  };

  ensureFolder(allureReport);
  ensureFolder(allureBackup);

  if (generateReport) {
    if (!fs.existsSync(allureResults) || fs.readdirSync(allureResults).length === 0) {
      console.warn('‚ö†Ô∏è No test results found. Skipping Allure report generation.');
      return;
    }

    // Generate report
    execSync(`npx allure generate "${allureResults}" -o "${allureReport}" --clean`, { stdio: 'inherit' });
    console.log('‚úÖ Allure report generated');

    // Add start-server.bat
    const batFilePath = path.join(allureReport, 'start-server.bat');
    fs.writeFileSync(batFilePath, `
@echo off
cd /d "%~dp0"
npx http-server -p 8080
pause
    `);

    // Zip report
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const zipPath = path.join(allureBackup, `AllureReport_${timestamp}.zip`);
    const zip = new AdmZip();
    zip.addLocalFolder(allureReport);
    zip.writeZip(zipPath);
    console.log(`üì¶ Zipped report at: ${zipPath}`);

    if (openReport) execSync(`npx allure open "${allureReport}"`, { stdio: 'inherit' });
  } else {
    console.log('‚öôÔ∏è Skipped Allure report generation');
  }
}

export default globalTeardown;



