import fs from "fs";
import path from "path";
import { execSync } from "child_process";
import AdmZip from "adm-zip";
import dotenv from "dotenv";

dotenv.config({ path: path.resolve(__dirname, "./config/.env") });

export default async function globalTeardown() {
  try {
    const enableAllure = process.env.ENABLE_ALLURE === "true";
    const openAllure = process.env.OPEN_ALLURE === "true";
    const baseReportPath = process.env.BASE_REPORT_PATH || "C:\\playwrightReports";
    const resultsDir = path.resolve(process.cwd(), process.env.ALLURE_RESULTS || "allure-results");
    const reportDir = path.join(baseReportPath, "allure-report");
    const backupDir = path.join(baseReportPath, "allure-backup");

    if (!enableAllure) {
      console.log("üö´ Allure disabled. Skipping report generation.");
      return;
    }

    // Ensure base dirs exist
    [baseReportPath, backupDir].forEach((dir) => {
      if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
    });

    // Check if allure-results exist
    if (!fs.existsSync(resultsDir) || fs.readdirSync(resultsDir).length === 0) {
      console.warn(`‚ö†Ô∏è No test results found in: ${resultsDir}. Skipping Allure generation.`);
      return;
    }

    console.log("üìä Generating static Allure HTML report...");
    execSync(`npx allure generate "${resultsDir}" --clean -o "${reportDir}"`, { stdio: "inherit" });

    // Verify report generated
    if (!fs.existsSync(reportDir) || fs.readdirSync(reportDir).length === 0) {
      console.error("‚ùå Allure report generation failed. No files found.");
      return;
    }
    console.log(`‚úÖ Allure report generated at: ${reportDir}`);

    // Create batch file for manager (double-click to open report)
    const batScript = `
@echo off
echo Opening Allure Test Report...
start "" "index.html"
exit
`;
    fs.writeFileSync(path.join(reportDir, "View_Report.bat"), batScript);

    // Zip the report for sharing
    const timestamp = new Date().toISOString().replace(/[:.]/g, "-").replace("T", "_").split("Z")[0];
    const zipPath = path.join(backupDir, `Allure_Report_${timestamp}.zip`);
    const zip = new AdmZip();
    zip.addLocalFolder(reportDir);
    zip.writeZip(zipPath);
    console.log(`üì¶ Report zipped successfully: ${zipPath}`);

    // Optional: open report for local viewing (developers)
    if (openAllure) {
      console.log("üåê Opening Allure report in browser...");
      execSync(`npx allure open "${reportDir}"`, { stdio: "inherit" });
    }

    console.log("üéâ Allure teardown completed successfully.");

  } catch (error) {
    console.error("‚ùå Error in globalTeardown:", error);
  }
}