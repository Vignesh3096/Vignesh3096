import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';
import dotenv from 'dotenv';
import AdmZip from 'adm-zip';

dotenv.config({ path: path.resolve(__dirname, './config/.env') });

async function globalTeardown() {
  const allureResults = process.env.ALLURE_RESULTS || 'C:/PlaywrightReports/allure-results';
  const allureReport = process.env.ALLURE_REPORT || 'C:/PlaywrightReports/allure-report';
  const allureBackup = process.env.ALLURE_BACKUP || 'C:/PlaywrightReports/allure-backup';
  const generateReport = process.env.ALLURE_GENERATE === 'true';
  const openReport = process.env.ALLURE_OPEN === 'true';

  const ensureFolder = (folderPath: string) => {
    if (!fs.existsSync(folderPath)) {
      fs.mkdirSync(folderPath, { recursive: true });
      console.log(`📁 Created: ${folderPath}`);
    }
  };

  console.log('\n🧹 Cleaning and preparing Allure folders...');

  // Clean allure-results
  if (fs.existsSync(allureResults)) {
    fs.rmSync(allureResults, { recursive: true, force: true });
    console.log(`🗑️ Deleted old results: ${allureResults}`);
  }
  ensureFolder(allureResults);
  ensureFolder(allureReport);
  ensureFolder(allureBackup);

  if (generateReport) {
    // Generate report
    console.log('\n📊 Generating Allure report...');
    try {
      execSync(`allure generate "${allureResults}" -o "${allureReport}" --clean`, { stdio: 'inherit' });
      console.log('✅ Allure report generated successfully.');
    } catch (err) {
      console.error('❌ Failed to generate Allure report:', err);
      return;
    }

    // Add portable start-server.bat inside report folder
    const batFilePath = path.join(allureReport, 'start-server.bat');
    const batContent = `
@echo off
echo Launching Allure Report on local server...
cd /d "%~dp0"
npx http-server -p 8080
pause
    `;
    fs.writeFileSync(batFilePath, batContent);
    console.log('🖥️ Added start-server.bat to Allure report.');

    // Zip the report including start-server.bat
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
    const zipName = `AllureReport_${timestamp}.zip`;
    const zipPath = path.join(allureBackup, zipName);

    const zip = new AdmZip();
    zip.addLocalFolder(allureReport);
    zip.writeZip(zipPath);
    console.log(`📦 Zipped report created at: ${zipPath}`);

    // Optionally open report
    if (openReport) {
      try {
        execSync(`allure open "${allureReport}"`, { stdio: 'inherit' });
        console.log('🌍 Allure report opened in browser.');
      } catch (err) {
        console.error('❌ Failed to open Allure report:', err);
      }
    }
  } else {
    console.log('⚙️ Skipped Allure report generation (ALLURE_GENERATE=false)');
  }

  console.log('\n🎯 Global teardown completed.');
}

export default globalTeardown;